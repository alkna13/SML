source("/home/nils/Rfiles/loadImage.R")
source("A:/Machine_Learning/Basefolder/loadImage.R")
####### 1. Obtain data #######
# Load one person data
#x1 = loadSinglePersonsData(300,4,0,"/home/nils/2017/group") #0=Alec (amazon server path)
x1 = loadSinglePersonsData(300,4,0,"A:/Machine_Learning/2017/group") #0=Alec (local PC path)
#array for the cipher instances
cipher_array <- array(0,dim=c(5,dim(x1[2])))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)+pos
cipher_array[row,] <-x1[cipher*400,]
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(iris2) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
cipher_array <- array(0,dim=c(5,dim(x1)[]))
cipher_array <- array(0,dim=c(5,dim(x1)[2]))
cipher_array <- array(0,dim=c(5,dim(x1[,2])))
cipher_array <- array(0,dim=c(50,dim(x1[2])))
cipher_array <- array(0,dim=c(0,50,dim(x1[2])))
View(x1)
View(x1)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)+pos
cipher_array[row,] <-x1[cipher*400,]
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(iris2) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)+pos
cipher_array[row,] <-x1[cipher*400,]
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)+pos
cipher_array[row,] <-x1[pos,]
print(pos)
print(row)
pos = pos +1
}
}
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos,]
print(pos)
print(row)
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
View(cipher_array)
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos,]
print(cipher_array[row,1:100])
pos = pos +1
}
}
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos+1,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos+1,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = cipher*400
for(i in 1:5){
row = (cipher*5)+pos
cipher_array[row,] <-x1[pos+1,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = (cipher*400)+1
for(i in 1:5){
row = (cipher*5)
cipher_array[row,] <-x1[pos,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher in 0:9)
{
pos = (cipher*400)+1
for(i in 1:5){
row = (cipher*5)+1
cipher_array[row,] <-x1[pos,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
pos = pos +1
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[row,] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[row,] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(dim(x1)[2]),50)
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[,row] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(dim(x1)[1]),50)
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[,row] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
#array for the cipher instances
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[row,] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]]) # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
cipher_array <- array(0,dim=c(50,dim(x1)[2]))
####### 2. Get five instances of each cipher out of training set #######
for(cipher_iter in 1:10)
{
cipher = cipher_iter-1
for(i in 1:5){
row = (cipher*5)+i
row_train_set = (cipher*400)+i
cipher_array[row,] <-x1[row_train_set,]
cat("Row: ",row, " values= ", cipher_array[row,1:100],"\n")
}
}
####### 2. Calculate distances and draw dendogram #######
dist_ciphers <- dist(cipher_array[,2:dim(x1)[2]],  method = "euclidean") # calculate distances
hc_ciphers <- hclust(dist_ciphers)
plot(hc_ciphers, hang = -1, cex = 0.6)
